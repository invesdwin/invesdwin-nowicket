<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.invesdwin</groupId>
	<artifactId>invesdwin-nowicket-examples-war</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<version.compiler>1.7</version.compiler>

		<version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
		<version.maven-processor-plugin>2.2.4</version.maven-processor-plugin>

		<version.invesdwin-nowicket>1.0.0-SNAPSHOT</version.invesdwin-nowicket>
		<version.javax.servlet>3.0.0.v201112011016</version.javax.servlet>
	</properties>


	<build>
		<pluginManagement>
			<plugins>
				<!-- run this sample with "mvn tomcat7:run" and access the website at 
					http://localhost:8080 -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<port>8080</port>
						<path>/</path>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- our typical compiler configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<source>${version.compiler}</source>
					<target>${version.compiler}</target>
					<complianceLevel>${version.compiler}</complianceLevel>
					<encoding>${file.encoding}</encoding>
					<compilerArgument>-proc:none</compilerArgument>
					<Xlint>ignore</Xlint>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<!-- enable annotation processing and thus allow the invesdwin-norva constants 
				generator to create classes for our models (either annotate model with @BeanPathRoot 
				or extend AValueObject -->
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>${version.maven-processor-plugin}</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/apt</outputDirectory>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<!-- make development a bit easier by allowing html files and other web 
			resources to reside next to our class files so we do not have to maintain 
			two identical package trees -->
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>${basedir}/src/test/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<!-- add a dependency to invesdwin-NoWicket -->
		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-nowicket</artifactId>
			<version>${version.invesdwin-nowicket}</version>
			<exclusions>
				<exclusion>
					<!-- exclude servlet API to add special handling below -->
					<artifactId>javax.servlet</artifactId>
					<groupId>org.eclipse.jetty.orbit</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- for compilation we need the servlet API, but not for deployment since 
			tomcat has its own; also make sure to only have one of these jars in your 
			classpath -->
		<dependency>
			<groupId>org.eclipse.jetty.orbit</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${version.javax.servlet}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>