<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.invesdwin</groupId>
	<artifactId>invesdwin-nowicket-examples-mvp-bsgcoach</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<glassfish-jaxb.version>2.3.2</glassfish-jaxb.version>
		<hibernate-validator.version>6.1.5.Final</hibernate-validator.version>
		<spring.version>5.3.8</spring.version>
		<okhttp3.version>4.9.1</okhttp3.version>
		<slf4j.version>1.7.31</slf4j.version>
		<spring-security.version>5.5.1</spring-security.version>

		<project.version.invesdwin-bom>1.0.16-SNAPSHOT</project.version.invesdwin-bom>
		<project.version.invesdwin-nowicket>1.0.4-SNAPSHOT</project.version.invesdwin-nowicket>
		<project.version.invesdwin-maven-plugin>1.0.12-SNAPSHOT</project.version.invesdwin-maven-plugin>
		<version.javax.inject>1</version.javax.inject>
		<version.maven-processor-plugin>3.3.3</version.maven-processor-plugin>
		<version.spring-boot-maven-plugin>2.5.1</version.spring-boot-maven-plugin>
		<version.jacoco-maven-plugin>0.8.6</version.jacoco-maven-plugin>
		<version.maven-surefire-plugin>2.22.2</version.maven-surefire-plugin>
		<aspectj.version>1.9.6</aspectj.version>
		<commons-codec.version>1.15</commons-codec.version>

		<start-class>com.bsgcoach.Main</start-class>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-bom</artifactId>
				<version>${project.version.invesdwin-bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-nowicket-parent</artifactId>
				<version>${project.version.invesdwin-nowicket}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-maven-plugin</artifactId>
				<version>${project.version.invesdwin-maven-plugin}</version>
			</dependency>

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<exclusions>
					<exclusion>
						<!-- tries to bring in 2.0.0-alpha1 -->
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-nowicket</artifactId>
		</dependency>
		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-instrument</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${version.javax.inject}</version>
		</dependency>

		<!-- contains @Configurable aspect -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<!-- contains @PreAuthorize aspect -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
		</dependency>
		<!-- contains aspect for AValueObject -->
		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-aspects</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
			<exclusions>
				<exclusion>
					<!-- tries to bring in 2.0.0-alpha1 -->
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<complianceLevel>${java.version}</complianceLevel>
					<compilerArgument>-proc:none</compilerArgument>
					<Xlint>ignore</Xlint>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-maven-plugin</artifactId>
				<version>${project.version.invesdwin-maven-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>initialize</goal>
							<goal>generate-sources</goal>
							<goal>compile</goal>
						</goals>
						<configuration>
							<useInvesdwinEclipseSettings>true</useInvesdwinEclipseSettings>
							<codeComplianceLevel>${java.version}</codeComplianceLevel>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>${version.maven-processor-plugin}</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/apt</outputDirectory>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
					<execution>
						<id>process-test</id>
						<goals>
							<goal>process-test</goal>
						</goals>
						<phase>generate-test-sources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-test-sources/apt</outputDirectory>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<fail>true</fail>
					<failFast>true</failFast>
					<rules>
						<requireUpperBoundDeps />
						<bannedDependencies>
							<excludes>
								<exclude>commons-logging:commons-logging</exclude>
								<exclude>org.aspectj:aspectjrt</exclude>
								<exclude>javax.servlet:servlet-api</exclude>
								<exclude>org.apache.geronimo.specs:geronimo-jaxb_2.1_spec</exclude>
								<exclude>commons-logging:commons-logging-api</exclude>
								<exclude>javax.persistence:persistence-api</exclude>
								<exclude>log4j:log4j</exclude>
								<exclude>org.slf4j:slf4j-log4j12</exclude>
								<exclude>javax.servlet.jsp:jsp-api</exclude>
								<exclude>net.sf.ehcache:ehcache-core</exclude>
								<exclude>javax.transaction:jta</exclude>
								<exclude>javax.enterprise:cdi-api</exclude>
								<exclude>net.jcip:jcip-annotations</exclude>
								<exclude>org.glassfish:javax.servlet</exclude>
								<exclude>org.hibernate:hibernate-c3p0</exclude>
								<exclude>org.hibernate.javax.persistence:hibernate-jpa-2.0-api</exclude>
								<exclude>org.hibernate.javax.persistence:hibernate-jpa-2.1-api</exclude>
								<exclude>org.hibernate.javax.persistence:hibernate-jpa-2.2-api</exclude>
							</excludes>
						</bannedDependencies>
					</rules>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>${basedir}/src/test/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
	</build>

	<distributionManagement>
		<repository>
			<id>invesdwin-oss</id>
			<name>invesdwin-oss</name>
			<url>https://invesdwin.de/repo/invesdwin-oss</url>
		</repository>
		<snapshotRepository>
			<id>invesdwin-oss</id>
			<name>invesdwin-oss</name>
			<url>https://invesdwin.de/repo/invesdwin-oss</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>invesdwin-oss</id>
			<url>https://invesdwin.de/repo/invesdwin-oss-remote</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>invesdwin-oss</id>
			<url>https://invesdwin.de/repo/invesdwin-oss-remote</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>dist</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<shadedArtifactAttached>true</shadedArtifactAttached>
									<shadedClassifierName>standalone</shadedClassifierName>
									<transformers combine.self="override">
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
											<resource>META-INF/spring.handlers</resource>
										</transformer>
										<transformer
											implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
											<resource>META-INF/spring.factories</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
											<resource>META-INF/spring.schemas</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<mainClass>${start-class}</mainClass>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
											<resource>META-INF/spring.tooling</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
											<resource>META-INF/cxf/bus-extensions.txt</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
											<resource>META-INF/mime.types</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
											<resource>META-INF/aop.xml</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
											<resource>META-INF/wsdl.plugin.xml</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.PluginXmlResourceTransformer" />
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer" />
									</transformers>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-maven-plugin</artifactId>
								<version>${version.spring-boot-maven-plugin}</version>
								<scope>compile</scope>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<activation>
				<!-- use "mvn clean install -Pjacoco" to enable target/jacoco.exec file 
					generation -->
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<!-- https://stackoverflow.com/questions/40067455/jacoco-caused-by-java-lang-classnotfoundexception-org-jacoco-agent-rt-inter -->
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.agent</artifactId>
					<classifier>runtime</classifier>
					<!-- not using test scope so that annotation processors work properly, 
						requires less overrides in pom.xmls -->
					<version>${version.jacoco-maven-plugin}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${version.jacoco-maven-plugin}</version>
						<executions>
							<execution>
								<id>default-instrument</id>
								<goals>
									<goal>instrument</goal>
								</goals>
							</execution>
							<execution>
								<id>default-restore-instrumented-classes</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>restore-instrumented-classes</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.maven-surefire-plugin}</version>
						<configuration>
							<systemPropertyVariables>
								<jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
